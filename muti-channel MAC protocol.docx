第一章 绪论
1.1 研究背景和意义
频谱资源的短缺和认知无线电越来越称为未来研究的方向
1.2认知无线电
1.2.1认知无线电的概念
认知无线电（Cognitive Radio,CR）的相关概念于1999年被Joe Mitola第一次提出[J.Mitola, Q.Gerald, JR. Maguire. Cognitive Radios: Making software Radios more personal. IEEE Personal Communieations, Augest1999:6(4)][Mitola J.Cognitive radio:An intergrated afent architecture of software defined radio.Doctor of Technology,Royal Inst.Technol.(KTH),Stockholm,Sweden,2000][Haykin S.Cognitive Radio:Brain-Empowered Wireless Communications [J]. IEEE Journal on Selected Areas in Communications,2005,23(2):201-220][ R.W. Thomas, L.A. DaSilva, A.B. MacKenzie,Cognitive networks, in:Proc.IEEE DySPAN 2005, November 2005,pp. 352–360.]，表示可以对外界环境的情况进行感知和学习并利用学习到的信息进行通信的调整的通信系统。然而对于认知无线电却没有一个明确的定义，其定义包含了对无线通信环境的侦听，针对目前的通信环境的解决方案的计算和生成，与解决方案相对应的行动策略集和对于具体实施策略的决定过程。联邦通讯委员会（Federal Communications Commission，FCC）提出，具有无线电频谱感知功能的通信系统即可被称为“认知无线电”[2]。Simon Haykin综合以上两种定义给出了第三种定义[Haykin S. Cognitive radio: brain-empowered wireless communications[J]. Selected Areas in Communications, IEEE Journal on, 2005, 23(2): 201-220.]：认知无线电是一种能感知周围环境的智能无线系统，这种通信系统能够通过实时地学习周围的环境情况，针对RF的激励自适应的改变系统自身的状态。
 
图 认知圈

如图所示，Haykin认为认知无线电的运行过程包括三个主要过程：频谱分析、信道状况估计和建模预测、功率控制和频谱管理。由无线环境的RF激励，通信系统进行了频谱感知和分析，其中包括频谱空洞、噪声统计和通信统计等。将分析到的参数进行信道状况的估计，并根据该通信系统对环境的数学建模，对该无线系统可占用的资源进行预测。最后根据预测结果调整功率和信道等参数，做到自适应的对无线环境进行调整。
1.3 ad-hoc认知网络场景
图
相关的概念可以用来构成“开放频谱系统”，在这样的通信系统中，授权用户（主用户）拥有较高优先级的频谱使用权；认知用户（次级用户）在频谱资源没有被授权用户使用的空闲时间，可以占用该频谱资源，要求不能对授权用户的使用造成影响，这样的接入也叫“机会接入”。

1.2.2 认知无线的关键技术
1.2.2.1 频谱感知
认知无线电具有对周围频谱资源的使用情况的感知能力，能够侦听信道并判断该信道是否已经被授权用户占用，以达到有效发现“频谱空洞”并对其进行利用的目的。在这个过程中，要求认知用户不仅具有能发现空闲频谱资源的能力，也要保证不能因为频谱感知的错误导致对授权用户通信的干扰，要求对授权用户的检测成功率达到99.9%[Weiss T A,Jondral F K.Spectrum Pooling:An innovative strategy for the enhancement of spectrum efficiency.IEEE Radio Communications Magazine,2004,42(3):8-12.]。
1）匹配滤波检测
匹配滤波器可以使得信号的信噪比最大[Sahai A,Hoven N,Tandra R.Some fundamental limits in cognitive radio.Allerton Conf.on Commun.Control and Computering 2004,2004]，需要认知用户知道授权用户信号的调制方式、速率等特征。同时，由于匹配滤波器的抽样判决时刻是匹配滤波方法的重要参数，所以必然要求认知用户与授权用户实现时钟同步。所以匹配滤波的方法用在认知频谱检测中成本过高，因而虽然性能良好，使用率却并不高。
2）循环平稳特征检测
经过一定的调制方法处理过的携带有一定信息的信号，其均值、自相关函数等统计特性呈现周期变化的特点。而噪声一般是没有频谱相关性的信号，所以利用频谱分析仪可以利用信号的相关性对检测到的信号是否是噪声进行甄别[Fehske A,Gaeddert JD,Reed J H.A new approach to signal classification using spectral coffelation and neural networks.in Proc.IEEE DySPAN 2005,2005:144-150]。
3）能量检测
能量检测方法是最容易实现的频谱感知方法，在能量检测方法中，认知用户无需知道授权用户的信号特征，只需要检测信道上能检测到的信号强度。尤其在认知用户无法获取授权用户信息的情况下，这种检测方式是最好的方法[Digham F，Alouini M，Simon M．On the energy detection of unknown siginal over fading channels．in Proc．IEEE ICC 2005,2003,5:3575-3579]。接收机对接收到的信号的平方积分结果与事先设定的阈值做对比，如果大于预设阈值则认为该信道不可用。这样的方法的缺点是无法区分严重的噪声影响与授权用户到来这两种情况，可能产生过多的信道切换，增加认知过程的成本。
4）协作检测
由于授权用户和认知用户地理位置分布的复杂性，硬件条件和检测方法成本的限制，有的认知用户可能无法通过自身的感知探测到频谱资源的真实情况，所以需要认知用户共同进行频谱的感知。合并和汇总多个认知用户的感知结果有利于提高检测率，减小多径效应和阴影效应造成的影响[Ghasemi,Sousa ES.Collaborative spectrum sensing for opportunistic access in fading environment.in Proc.IEEE DySPAN 2005,2005,：131-136]。
另一方面，认知无线网络中不同节点的通信环境很有可能各不相同，所以需要不同节点将各自感知到的信道情况进行信息交互，使得通信节点获得与其相关的节点的周围的通信环境状况。如图所示，假设节点A通过频谱感知，得知其可用信道为1、2、3信道。A希望与节点B进行通信，节点B的可用信道为1、3、4信道，此时通信双方的可用信道不同，必须选择对于两个节点都可用的信道进行通信。所以两个节点必须进行可用信道的信息交互
图


1.2.2.2频谱接入方式
根据文献[Mitola J. Cognitive radio: making software radios more personal[J]. IEEE Personal Communications, 1999, 6(4):13-18.]，频谱接入方式可以按照下图分类：
 
图 动态频谱分配分类
1）动态独享模型
动态独享模型的主要思想是所有的频谱资源都在服务器上登记，由服务器对频谱资源的使用权限进行分配。具体来讲主要分为频谱产权（Spectrum property rights）[R. Coase, “The federal communications commission,” J. Law and Economics, pp. 1–40, 1959.][ D. Hatfield and P. Weiser, “Property rights in spectrum: Taking the next step,”in Proc. 1st IEEE Symp. New Frontiers Dynamic Spectrum Access Networks, Nov.2005, pp. 43-55.]和动态频谱分配（Dynamic spectrum allocation）[L. Xu, R. Tonjes, T. Paila, W. Hansmann, M. Frank, and M. Albrecht, “DRiVE-ing to the Internet: Dynamic radio for IP services in vehicular environments,” in Proc. 25th Annual IEEE Conf. Local Computer Networks, Nov. 2000, pp. 281–289.]。频谱产权的主要思想在于，频谱的授权用户可以自由的出售或者出租频谱资源，对其中使用的具体算法和技术不做限定。动态频谱分配是指一定的频谱带宽和一定的时间之内的频谱资源的使用权进行动态分配的方法，这种方法比前者更快速也更灵活。
2）开放共享模型
开放共享模型允许所有用户共享某一段频谱资源，包括非授权的工业科学医学（Industry Science and Medicine，ISM）。这种模型主要分为集中式和分布式两种控制方式。
3）分层接入模型
分层接入模型分为Overlay、Underlay和混合接入这两种方式。
Overlay[Laxminarayana S. Pillutla and Vikrani Krishnamurthy. Game Theoretic Rate Adaptation for Spcctrum-Overlay Cognitive Radio Networks[C]. IEEE GlobeCom, 2008, pp. 1–5.][ Tecrawat Issaxiyakul, Laxminarayana S. Pillutla, and Vikram Krishnamurthy. Tuning radio resource in an overlay cognitive radio network for TCP: Greed isn’t good[C]. IEEE Communications Magazine, July 2009, vol. 47, no. 7, pp. 57-63.][ Gukan Gu, Suzan Bayhan, and Fatih Alagoz. Cognitive femtocell networks: an overlay architecture for localized dynamic spectrum access[C]. IEEE Wireless Communications, Aug. 2010, vol. 17, no. 4, pp. 62-70.]接入方式是指，认知用户通过自己的频谱感知，侦听到目前某段频段为空闲状态，既没有被任何的授权用户使用，此时认知用户接入该频段进行自己的通信行为。这样的方式可以保证认知用户不会在同一时间和授权用户使用同一频段，因而可以保证认知用户的通信行为不会对授权用户造成干扰。
Underlay[Long Bao Le, and Ekram Hossain. Resource allocation for spectrum underlay in cognitive radio networks[J]. IEEE Trans, on Wireless Communications, Dec. 2008, vol. 7, no. 12, pp. 1150-1158.][ Vicent Pla, Jose-Ramon Vidal, Jorge Martinez-Bauset and Luis Guijarro. Modeling and Characterization of Spectrum White Spaces for Underlay Cognitive Radio Networks[C]. in Proc. IEEE ICC 2010, pp. 1-5.][ Alircza Babaei and Bijan Jabbari. Interference Modeling and Avoidance in Spectrum Underlay Cognitive Wireless Networks[C]. in Proc. IEEE ICC 2010, pp. 1-5.][ Bin Wang and Dongmei Zhao. Scheduling for long term proportional fairness in a cognitive wireless network with spectrum underlay[J]. IEEE Trans, on Wireless Communications, March 2010, vol. 9, no. 3, pp. 1150-1158.]是指使用扩频通信的技术，在同一时间和授权用户使用同一段频谱资源。这种方式使信道的利用率更高，但是需要使用扩频通信技术，同时要求认知用户的信号功率不能超过一定的门限，以达到不影响授权用户的目的。
文献[Vasu Chakravarthy, Xue Li, Ruolin Zhou, Zhiqiang Wu, and Michael Temple. Novel overlay/underlay cognitive radio waveforms using SD-SMSE framework to enhance spectrum efficiency-part II: analysis in fading channels[J]. IEEE Trans, on Communications, June 2010, vol. 58, no. 6, pp. 5306-5315.][ G. Bansal., O. Duval, and F. Gagnon. Joint Overlay and Underlay Power Allocation Scheme for OFDM-Based Cognitive Radio Systems[C]. in Proc. IEEE VTC 2010, pp. 1-5.]提出了混合接入模式，这种模式是指在接入过程中可以根据通信环境状况转换其接入方式，其中混合使用了Overlay和Underlay两种方式。混合接入模式可以发挥两种接入方式的优点，但相应的切换算法也更为复杂，实现上更增大了认知用户节点接入频谱的开销。
1.2.2.3 动态频谱分配
认知无线电的动态分配需要满足以下原则：防止干扰、Qos质量、无缝通信。认知用户组成的认知网络的通信，需要占用授权网络用户的频段，但是不能干扰授权网络用户的通信；认知网络用户的通信应该有一定的质量保证，要求在频谱感知和分析阶段可以分配到能够保证通信质量的频谱资源；在认知用户的通信过程感知到授权用户的到来时，切换信道的过程不能影响上层的通信过程，在上层协议看来通信应当无缝的进行。
在频谱感知之后频谱分配包括以下三个技术关键点：
1）频谱策略
认知无线通信系统在感知到可用信道之后，应该根据整个无线环境的状况对具体使用哪个频段资源进行策略。
2）频谱共享
由于认知无线系统是检测到频谱空洞之后的机会接入模式，如果对于频谱分配不加以控制则有很大可能性会导致冲突，所以需要一定的协议和算法来进行频谱共享的控制。
3）频谱移动
本文讨论的认知无线网络场景中的认知用户通信不能影响授权用户，因而即使认知用户正在通信当中，如果检测到授权用户的到来，需要立即停止正在进行的通信，并在其他信道或时间重新建立自己的通信。所以要求认知节点所运行的认知通信协议具有抗干扰的移动性和可重构性功能。
1.4论文结构安排
第二章 多信道认知MAC协议
（Maximizing Rendezvous Diversity in）
802.11 MAC协议
帧间间隔
帧间间隔的区分可以使通信过程按照设计好的协议流程进行，帧间间隔短的帧类型可以优先于帧间间隔长的帧类型发送，由此产生了不同帧类型之间的优先级顺序，进而控制了不同帧类型的先后发送顺序，也就控制了通信过程的进行，同时也可以在一定程度上避免帧冲突。最常用的有两种帧间间隔：短帧帧间间隔（SIFS，Short Interframe Space）、长帧帧间间隔(DIFS，DCF Interframe Space)
SIFS使用在发送CTS、DATA、ACK等帧类型时。这样可以使RTS的接收方快速回复CTS，其他有数据需要发送的节点都需要等待更长的时间才能发送，从而保证了RTS的发送方和接收方能够优先的发送数据。CTS之后的DATA和DATA之后的ACK的发送使用SIFS的原因同上，这样能够保证优先发送RTS的一方和接收方，在自己的数据发送完之前可以一直占用信道，其他节点都无法发送数据。DIFS使用在RTS发送之前，当其他节点正在发送数据时，即使发送两个数据包之间信道处于空闲状态，也由于需要等待更长的帧间间隔使得该节点无法抢占信道。
1.3.2 dcf工作方式
802.11MAC 协议中对于无线网络的接入分为分布式、集中式和混合式三种方式[IEEE Standard for Information Technology— Telecommunications and information exchange between systems— Local and metropolitan area networks— Specific requirements Part 11:Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications(M),IEEE Std 802.11-1999, June 2007,251-283]，在这里我们主要介绍DCF方式。
分布式协调功能（DCF，Distributed Coordination Function）不需要中心节点的协调，是无线网络中最常用的介质访问控制方式，也适用于ad-hoc网络模式。当无线节点有数据需要发送时，会对无线信道进行侦听，如果发现信道空闲则等待一个DIFS之后发送RTS，通信的另一方接受到RTS帧之后，等待SIFS广播CTS作为对发端的回应，表示该节点可以接收对方发送的数据，并且告知周围节点此时为了防止数据冲突不应该再向该节点发送数据。这种RTS\CTS的方式可以有效的避免传统无线网络中的隐藏终端和暴露终端问题。
图
点协调功能（PCF，Point Coordination Function）需要用来协调各个节点的中心节点，可以提供无竞争的服务。（fix me）
1.3.1隐藏终端和暴露终端
传统无线网络隐藏和暴露终端
 
多信道隐藏终端
除了传统无线网络中都存在的隐藏终端和暴露终端的问题，多信道无线网络中还存在多信道隐藏终端问题。由于多信道MAC协议中可能存在多个信道可以传递控制信息，这种方式改善了多信道协议的控制信息拥塞的瓶颈问题，但是也带来了新的问题。
 图 多信道隐藏终端
如图所示，A、B、C、D表示无线网络中的四个节点并假设这四个节点的通信范围可以相互覆盖，既如果同时在相同信道上发送帧就会造成冲突。横坐标表示时间，纵坐标表示不同的信道，其中，CH0上的RTS(A)表示节点A于 时刻在CH0上发送了RTS帧。假设在这个通信系统中使用多控制信道的多信道MAC协议，CH0和CH1表示控制信道，专门用来交换控制信息，CH2和CH3表示数据信道用来传输数据信息。图中CH0和CH1的 到 这段时间A、B两个节点在CH0信道上进行信道预约，C、D两个节点在CH1信道上进行预约。不失一般性，我们假设这两对节点的预约可以不是同时进行，但只要他们预约的时间比较相近，依然有可能都检测到可用的CH2信道并将其作为理想的数据传输信道。在下一时刻如果两对通信节点都切换到CH2信道进行数据信息的发送，将必然造成数据冲突，由此产生了多信道隐藏终端的问题。

2.1 基于控制信道
（Maximizing Rendezvous Diversity in）

2.1.1 专用控制信道
专用控制信道的方法简化了连接建立的过程。现有的多数的关于认知无线电的MAC协议都要求有全局控制信道[J. Jia, Q. Zhang, and X.S. Shen, “HC-MAC: A Hardwareconstrained Cognitive MAC for Efficient Spectrum Management,” IEEE J. Selected Areas in Comm., vol. 26, no. 1, pp. 106-117, Jan. 2008.][ H. Nan, T.-I. Hyon, and S.-J. Yoo, “Distributed Coordinated Spectrum Sharing MAC Protocol for Cognitive Radio,” Proc. IEEE Second Symp. New Frontiers in Dynamic Spectrum Access Networks (DySPAN), pp. 240-249, Apr. 2007.][ J. So and N. Vaidya, Multi-Channel MAC for Ad Hoc Networks: Handling Multi-Channel Hidden Terminals Using a Single Transceiver,” Proc. ACM MobiHoc, pp. 222-233, May 2004.]使得所有的网络节点都可以接入这个控制信道；或者是将网络中的节点分组，每个组有局部控制信道[T. Chen, H. Zhang, G.M. Maggio, and I. Chlamtac, “CogMesh: A Cluster-Based Cognitive Radio Network,” Proc. IEEE Second Symp. New Frontiers in Dynamic Spectrum Access Networks (DySPAN), pp. 168-178, Apr. 2007.][ J. Zhao, H. Zheng, and G.-H. Yang, “Distributed Coordination in Dynamic Spectrum Allocation Networks,” Proc. IEEE First Symp. New Frontiers in Dynamic Spectrum Access Networks (DySPAN), pp. 259-268, Nov. 2005.]。对于这样的多信道协议，要求每个认知通信节点都拥有两对收发机，其中一对固定在控制信道上，收发控制信息同时监听控制信息，从而掌握整个网络的频谱分配状况。另一对收发信机则根据其在控制信道上预约到的信道，随时切换到相应信道进行数据信息的交互。根据文献[comparison of multi-channel MAC protocols]，这种专用控制信道的多信道协议在信道比较多且数据包比较长的情况下性能优于其他协议。只有一对收发信机的协议无法一直监听控制信道和其他节点的通信状况，因而无法接入最佳信道降低了吞吐量。然而在机会频谱共享中，由于主用户可能会在任何时刻占用信道，所以控制信道跟数据信道的可用性得不到保障。因而保证控制信道的可用性成为这类协议最为困难的问题，甚至有时这种协议的运行条件是无法满足的。
 图
2.1.2动态控制信道
在认知无线电中的动态控制信道问题中，连接的建立分为两个部分：1）预约初始化阶段2）连接建立阶段。在初始化阶段，需要通信的双方节点要首先预约到一个控制信道。举例来说，如果使用普通跳频的方式来实现协议，两个节点需要交换一些关于自己的调频序列的信息。因而需要找到某个不受限制的控制信道，既这样的信道不会有主用户的打扰，是完全可靠的。在连接建立的阶段，需要在找到的受限制的控制信道上交互一般的用于信道预约的控制信息，这些控制信息用于找到适合数据传输的数据信道。在[9][11][18][19]中提到了很多动态控制信道的协议。
2.1.3 Split Phase
Split phase将时间划分为了两种，一种专门传输控制信息，另一种专门传输数据信息。协议只需要认知节点拥有一对收发信机，如图所示，在控制信息的传输时间，通信节点切换到约定好的信道进行控制信息的交互，既进行通信信道的预约；在传输数据信息的时间，切换到收发双方预约到的空闲信道进行数据信息的传输。
如果A节点需要向B节点发送数据，则A节点在控制信息的交互时间发送带有其感知到的空闲信道标号的最小值i的控制信息。B收到该控制帧之后，通过B的感知如果信道i可用则回复信道的确认帧。此时在该信道上的其他节点监听到了A、B之间的控制信息的交互，则其他节点在进行新的信道预约的时候，就不能再将信道i作为即将发送数据的信道进行预约，这样就可以保证数据传输过程不会发生冲突。
 图 Split phase运行过程
在数据传输阶段，所有有数据发送需求的节点切换到预约到的数据信道进行数据传输过程，多对收发节点可以同时在多个信道进行数据的传输。同时也允许多对收发节点切换到相同的信道进行数据的传输，因为收发双方可能没有足够多的数据需要传输，这样就会导致数专门进行数据传输的时间可以允许多对收发节点进行数据的传输，多对节点可以通过竞争或者协商的方式分时的占用信道防止冲突。
Split phase这种协议对于控制信息和数据信息的发送时间非常敏感，在协议过程中需要谨慎的调整相关参数以达到更好的效果。即使将控制信息和数据信息分隔开也不能明显的提升性能，因为当数据信道发生拥塞的时候，即使预约成功的概率提升了，也不能提高整个通信系统的性能。
2.2.基于跳频
多信道条件下，基于普通跳频（Common Hopping，CH）进行预约的协议，不需要依赖特定的控制信道。基于序列的CH协议[6][10]，可以在两个节点之间保证预约时间（time-to-rendezvous，TTR）的上限,每个节点按照一定的算法产生自己的跳频序列[6][7][10][28]，所以不需要在交互一般的数据信道预约的信息之前先进行控制信达的预约，简化了信道建立的过程。但是这样的协议往往只能提供非常有限的预约信道数量。

2.2.1 跳频序列
一个跳频序列决定了一个节点按照何种顺序切换到自己的各个可用信道。网络节点的一个周期内我们用u来表示其跳频序列 ，其中 ，代表信道的序号，而i代表第i个时隙， 则代表该序列对应的（时隙，信道）对。
对于给定的两个以T为周期的跳频序列u和v，如果 ，其中 ，那么认为u和v两个序列在时隙i，在信道j汇聚。对于这两个特定的序列u,v，第i个时隙叫做汇聚时隙，第j个信道叫做汇聚信道[Maximizing Rendezvous Diversity in]。用 表示信道j是否是两个序列间的汇聚信道则：
 
给出N个信道， 表示两个序列的汇聚信道个数[Control Channel Establishment in Cognitive Radio Networks using Channel Hopping ]：
 
2.2.1 RCH
随机跳频（Random channel hopping，RCH）协议，每个节点都按照一定的速率从在不同信道随机的之间改变自己的收发信道。节点的信道切换的速率可以相同[23]，也可以不同[22][26]。在RCH中，信道预约成功所需时延没有上限，因而两个需要进行预约的节点的预约时间可能非常长。
2.1.3 McMAC
在McMAC协议中，每个认知节点都维护一个随机跳频序列的生成种子，通过前期的控制信息的广播，不同节点间相互告知自己的随机序列种子[H.W. So, J. Walrand, and J. Mo, “McMAC: A Multi-Channel MAC Proposal for Ad Hoc Wireless Networks,” Proc. IEEE Wireless n Comm. and Networking Conf. (WCNC ’07), Mar. 2007.]。因而，任意节点都可以知道其他节点的跳频序列。从而在全网时间同步的情况下，该节点还可以计算出其他任意节点在某时刻所在的信道。
假设每个无线节点都不知道信道和其他节点是否空闲，且每个无线设备切换到每个信道的概率相同。当一个节点有数据需要发送时，该节点以一定的概率决定是否要在下一个时隙进行数据发送。如果决定下一个时隙进行数据传输，则该节点根据目的节点的跳频序列，计算出目的节点下一个时隙所处的信道，并切换到该信道发送RTS对所在信道进行信道预约。如果目的节点目前可以进行数据接收，则回复CTS。当RTS/CTS交互完成时，两个节点都停止跳频，就在当前信道进行数据交互。当数据传输完毕，则两个节点都跳回自己的跳频序列对应的在该时刻应该切换到的信道。对于数据传输之后的跳频过程，应该与没有进行数据传输的情况相同，这样可以保证其他节点依然能够根据之前交互过的跳频信息与收发双方节点进行通信。

图
2.2.2 SSCH
SSCH协议中，每个节点把多种跳频序列进行时分复用，来形成自己的跳频序列。这些跳频序列需要动态地与数据发送时的接收方进行匹配。由于只有当收发双方的信道吻合的时候，才能进行数据传输，所以数据的发送方需要根据接收方的要求不断调整自己调频序列。在这个协议运行过程中，所有节点需要比较严格的时间同步。
SSCH协议中每个跳频序列有一个随机数种子生成，每个节点按照自己的随机种子生成的随机序列进行跳跃，同时每个节点都可以在任意时间点改变自己的跳频序列。如果一个节点A有数据需要发送给节点B，则A根据自己掌握的关于B的跳频序列的信息，等到跟B在同一个信道时再向B传输信息。如果A需要频繁的跟B通信，则A可以修改自己的跳频序列，使得A在跳频时可以有更多的可能跟B同时切换到同一个信道。不同节点通过随机数种子的广播使得自己的跳频序列被其他节点获取。SSCH与McMAC的区别在于SSCH发送数据的过程并不打断跳频过程，而是等到与目的节点信道相同时再传输。
 
2.2.3 ACH
异步跳频（Asynchronization Channel Hopping，ACH）协议，不需要全局时钟同步，这种协议在ad-hoc网络中有很大的需求。因为在实现中，没有中心节点的自组织网络希望实现全网的是时钟同步，不论使用何种方法，总是困难重重的。在异步跳频协议中，最重要的问题：1）是在保证TTR的上限的情况下尽量的使得预约双方，可以预约到的信道数量尽量的增多。2）并且尽量使得预约到这些信道的概率相等。使预约到的信道数量增多的原因是，在认知无线网络环境下，主用户可能会出现占用信道，此时如果可预约的信道数量很多，则次级用户的通信不会因为主用户的到来而被阻断。如果是正在进行的通信被打扰，还可以重新预约到其他的可用信道，继续刚刚被打断的通信过程。使预约到不同的信道的概率尽量相等是处于多信道负载均衡的考虑。由于认知用户对于主用户会在什么时间点，出现在什么信道以及出现多长时间，都没有任何认知，只能在主用户到来之后才能感知到。所以次级用户认为主用户出现在各个可用信道的概率相等。因而也应该以相同的概率预约到所有的可用信道。另外，也可以防止当网络中节点过多时的信道的拥塞现象。
多信道MAC协议实现难点

第三章 认知多信道MAC协议设计
3.1 异步QCH跳频序列
3.1.1 伪随机序列
3.1.2 基于排列
3.1.3循环封闭特性


3.1.4 基于Quorum
由[Control Channel Establishment in Cognitive Radio Networks using Channel Hopping ]所述的A-QCH（异步QCH）中的利用 矩阵构造异步跳频序列。首先， 矩阵是一个 的矩阵，其中有n个不同的数字， ，这个矩阵的每一行和每一列保证每个数字只出现一次。例如：
 
另一种矩阵为列不变矩阵（Identical-Row Square，IRS）矩阵是一个 且包含有n个不同数字 的矩阵。这个矩阵的每一列都是一个相同的数字，例如：
 
在这种方法中，每个节点如果没有数据需要发送，则默认的选择列不变矩阵作为自己的跳频序列。如果有节点有数据需要发送，则将自己的跳频序列变换为 矩阵。在文献[]中已经证明，这样构造的收发双方的跳频序列满足定理4：收发双方在N个信道使用上述方法生成的跳频序列进行预约时，在 时间内满足 和循环封闭特性。已经证明，在 个时隙内，收发节点会在N个信道分别重合（Overlay）一次。
同时，根据定理3：如果一个跳频系统的周期是 ，信道重叠程度为m且满足循环封闭特性，那么跳频系统中的任意两个跳频序列在一个循环周期内的重叠时隙至少为 。即使两个跳频节点的时间并不同步。文献[]中分别证明了两个跳频的节点的时间相差跳频时隙T的整数倍的情况，和时间相差 的情况。
 
图
收发双方时间相差 的情况如上图所示，在这个跳频系统中有3个信道，在9个时隙内收发双方的跳频信道在每个信道都重合了一次，既定理4中 的情况。
 
图
如图所示是当收发双方的时间差是 时的情况，也就是发送方2的情况。发送方2的情况，可以认为是发送方1的形式移动了一段时间。通过观察可以发现原来重叠的信道在时间移动之后，只能重叠不到 的时隙。但是，3个信道会在其他时隙重叠大于 的时间。
3.1.5 跳频序列的评价标准

3.2异步多信道协议过程
本文中借助McMAC的思想，没有数据需要传输时进行按时隙跳频，信道预约成功之后驻留在预约成功的信道进行数据传输而不再跳频，在数据传输完毕之后再同步回自己的跳频序列中继续进行跳频。不同节点保留自己的跳频序列，该序列根据Quorum思想进行设计。与McMAC和SSCH等协议的不同在于，本文中描述的协议不需要全网时间同步，因而不需要计算接收节点在某时隙所在信道。利用Quorum设计思想，使得使用该跳频序列的网络节点在更短的时间内能够获得更多的信道重叠机会。由文献[]描述的异步跳频序列生成方法只描述了怎样生成在能够使节点跳频周期内，跟接收节点有更多的信道重叠机会。但是对于这种情况下后续协议运行过程和实现时的困难并没有过多描述。本文将从异步跳频汇聚的方法出发，完整描述在这种情况下认知网络协议运行过程。具体协议的设计细节可以有多种实施方案，这些方案各有优劣。下文将对“使用一个时隙预约信道”的方案进行详细的介绍，其他方案与第一个方案大体思想相同但有细微差别，为了简化描述，对于其他方案的描述将只介绍与第一个方案的区别。
 图
3.2.2 发送端逻辑
 
状态机 图
当节点A有数据需要发送给节点B时，先判断是否需要预约。如果不需要预约，则说明已经跟其他节点预约成功，正驻留在某个数据信道，则直接发送DATA数据帧，等待ACK确认即可；如果需要预约，说明该节点目前正处于跳频状态中。当节点需要发送数据时的状态转移条件和执行动作如图所示，下面将做详细解释。
1）初始化
发送状态机从初始化开始运行，节点进行相关参数的初始化。
2）一般跳频
所有节点初始化之后都处于“一般跳频”状态，按照初始化中定义的节点的跳频序列按照一定的跳频时隙进行跳频。这个状态有两个转出方向：
①计时器时间到后（既一个跳频时隙之后）切换到该节点的跳频序列所指示的下一个信道，之后又回到本状态。
②如果上层有数据包需要发送，则发送RTS请求帧并转移到“跳频 && 发送RTS请求”状态。
3）跳频 && 发送RTS请求
这个状态在跳频的同时发送RTS请求进行信道预约，并等待CTS的回应。
①计时器时间到后，切换信道并发送RTS请求，继续回到原状态。由于不同节点异步的进行跳频，所以该节点不知道其需要通信的节点B是否跟自己处于同一个信道，也不知道B在哪一个信道，所以在跳频过程中，每次切换一个信道，都必须发送RTS进行试探。根据文献[]的论述，使用Quorum方法生成的跳频序列理论上收发双方可以在 个时隙内有N次信道重叠机会，并且这N次信道重叠是在每个信道分别重叠一次。异步情况下可以保证最少有 个时隙双方信道处于重叠状态。
由于接收方的CTS会在发送RTS的时隙进行回复，所以不能在一个时隙内不停的发送RTS。我们设定每个发送节点在每次切换到一个信道时，在一个时隙时间内只能发送一次RTS，之后需要监听信道等待CTS。
②如果收到目的节点回复的CTS，则A节点认为预约成功，驻留在收到CTS的信道不再跳频。之后发送DATA数据帧并切换状态为“发送DATA”状态。
4）发送DATA
“发送DATA”状态是瞬时状态，表示处于数据发送阶段。在这个状态，发送节点监测上层端口并查看是否有新的数据包需要发送。
①如果有新的数据包，则发送DATA，并转移到等待ACK。
②如果在一定的时间 时间内，上层没有新的数据包需要发送，且对方节点也没有数据包发过来，说明此次数据传输结束，则转移到“一般跳频”状态。
5）等待ACK
发送数据帧DATA之后需要等待目的节点的ACK确认帧。
①如果在一定时间内收到了ACK，说明上一个数据帧发送成功，转移到发送DATA的状态。
②如果在一定时间内没有收到ACK确认帧
6）重传DATA
这个状态重新发送上次次发送的DATA帧，与“发送DATA”状态的区别在于，本状态下发送节点并不从上层获取新的数据包，且在发送DATA帧之前需要检测重传是否达到上限。
①如果没有达到重传上限，则发送DATA继续等待ACK。
②如果达到重传上限，则说明当前信道质量差，需要重新预约新的通信信道。此时停止数据的传输过程，重新回到“跳频 && 发送RTS请求”状态，与目的节点进行新一轮的信道预约。
通过分析我们可以看到，在本协议中一旦预约到可用的数据传输信道，则数据的发送无需再进行预约。这是因为考虑到多信道异步跳频汇聚方法的MAC协议，允许多对收发节点在多个信道同时进行通信，所以当一对收发节点预约到一个信道并在该信道开始通信时，如果没有授权用户的打扰，该信道可以认为是独享信道。此时无需在该信道上再进行信道预约，可以在一段时间之内一直发送上层送达的连续的数据包，直到检测到上层端口在一段时间内都没有需要发送的数据包为止，这也就是状态4回到状态2的方式。

画图，横轴时间纵轴信道，每个节点在哪个信道，发送什么包

3.2.3 接收端逻辑
 
状态机 图
认知网络中的接收节点在异步跳频过程中，也存在几种接收状态，以下将做详细解释。其中接收状态机的前两种状态（初始化、一般跳频）和发送状态机的含义基本相同。
1）初始化
与发送状态机相同。
2）一般跳频
一般跳频状态
3）驻留当前信道
当节点在跳频阶段，接收到发给自己的RTS之后立即回复CTS，但是该节点无法知道自己对于RTS的应答，是否被对方接收到。在这种情况下，只能证明节点当前所在信道可以作为数据传输信道，于是该节点就留在当前节点不再参与跳频。
2）等待DATA
作为接受节点，对发送方的RTS回复了CTS并驻留在当前信道之后，可能会立即收到发送方的DATA数据帧，也可能在间隔n个跳频时隙之后再次收到发送方的RTS请求。
第一种情况说明接收方的CTS被发送方接收到，并且信道预约已经成功，双方开始进行数据传输。第二种情况说明该节点回复的CTS并没有被数据发送方节点收到，当接收方节点驻留在当前信道之后，发送方又继续进行跳频和发送RTS，并在下一次跳频到当前信道时发送了RTS。
对于第一种情况应当重复步骤1），第二种情况说明接收节点状态转移到下一步。
3）接收DATA
在上一个状态下收到DATA帧之后，说明收发双方节点都已经认为信道预约已经成功，且双方都已经驻留在当前信道进行数据传输。此时只需要等待数据帧的到来。

如果在IDLE状态收到DATA数据帧，则直接驻留在收到DATA的信道，继续与对方进行通信。这种情况，是由于自己发送的CTS，可能由于链路质量问题，在一定时间内没有被对方应答，该节点认为对方已经不在网络上，或者已经放弃了数据的发送请求，因而回到了IDLE的跳频状态。这时链路状况好转，在某个中间节点保存了对方节点的数据帧，此时该中间节点将这个帧转发，接收方也应该对这个数据帧进行回应。虽然本文主要讨论在ad-hoc单跳网络的网络场景，但是为了保持多条网络的扩展性，所以在这里如此设计该逻辑。
（上面这一段什么意思？？）

3.3 MAC帧在本协议中的作用
文本设计的异步跳频协议中MAC帧结构的设计与802.11标准协议基本相同，但具体的发送和接收逻辑有所不同。
1）RTS

2）CTS
3）DATA
4）ACK
3.4.2 发送/接收完成
由于异步多信道跳频汇聚方法进行预约，相比于传统单一信道的信道预约开销巨大，为了减小信道预约的开销对于整个通信过程性能的影响，在收发双方节点已经预约到某信道且已经在该信道上进行数据的传输的情况下，如果在一段时间内收发双方还会继续进行通信，则不需要进行重新预约，直接在该信道上继续发送数据帧即可。
对比传统MAC协议，当一个MAC成的数据帧发送完成时，会在序号？？？上标明该MAC已经发送完成。也就是说传统MAC协议中，对于MAC层来说当一个MAC帧发送完成的时候一个通信过程就结束了。但是对于我们上面论述的情况，不能把MAC帧的发送完成当做一个通信过程的结束，而是应该把发送时间间隔较近的数据帧都当成同一个通信过程。所以需要通过判断距离最后一个数据帧发送或接收的时间，来判断一个通信过程是否完成。以发送方为例，该判断过程如下所示：

While 数据传输阶段:
If 有数据帧需要发送：
    发送帧
     
Else if  :
    标记数据发送结束

如图所示，在数据传输阶段不需要进行信道预约，一般情况下收发双方只需要发送DATA数据帧和ACK确认帧。处在数据传输阶段时，如果发送队列中有数据包需要发送，则用现在的时间 更新上一次的发送时间 ；如果队列中没有数据包需要发送，则检测 与 之间的差距是否大于 。如果时间差大于 ，则在设定的时间 上层不再向底层发送数据，可以认为是该数据发送过程已经结束。相应的，将数据传输标记为结束之后，下次循环前将因判断条件不符合而退出数据发送循环。接收方对应的接收结束的判断方法类似，只需将上述过程中的所有发送改为接收即可。
其中值得注意的是，标记数据发送结束之后，并不意味着数据传输过程的结束。在上层通信中，数据的发送方在MAC层看来也往往是数据的接收方。例如TCP等需要确认的上层协议中，数据的发送方需要接收对方的确认帧。在TCP层看来，确认帧不是数据，但在MAC帧看来所有的上层交付到底层进行发送的报文，都需要进行MAC层封装并发送，所以这些上层报文在MAC看来都是数据。由于通信的主动发起方往往也是接收方，所以自己的数据发送完毕后可能还需要继续留在当前信道接收对方发送的数据。所以只有当 时间内既没有数据包需要发送，也没有收到任何数据包才标志着本次数据传输过程的结束，才可以重新开始跳频。
3.4通信重构机制
根据第二章的论述，认知网络需要在授权用户出现在其通信信道时立即停止当前通信，并寻找其他可用信道资源，并在新的信道重新建立连接，继续被中断的通信。这个过程要求对于上层来说是完全透明的，在上层看来底层的通信状况需要像没有被打断一样。以上论述的重构功能包括两个过程：感知信道质量下降、重新建立连接。其中，授权用户的出现和由其他原因导致的网络状况变化都会导致当前的通信信道状况变差，然而无论是这两种情况中的哪一种，对于认知节点来说，都说明当前信道已经不能作为通信信道使用，需要重新进行信道预约并建立连接，所以我们不区别对待这两种情况导致的信道质量下降。
在数据发送过程中，如果发送的数据帧总是不能被正确的接收，即在一定时间内无法接收到对方的ACK确认，则说明当前链路质量差，导致自己的数据包并没有被目的节点正确的接收；或者是对方由于某种原因已经不在网络上。
此时节点A意识到，通信已经无法进行，需要转换到跳频预约阶段，重新跟正在通信的B节点再次进行预约。若通信中断是因为信道质量差，则再次预约可以预约到链路质量较好的信道继续进行通信；如果是因为对方已经不在网络上，则再次预约无法成功，节点A将暂时放弃数据的发送，使自己刚刚使用的信道重新变为对其他节点可用的信道，保证信道资源不被无意义的占用。？？？？？
但是由于网络节点对环境状况感知的不对等性，收发双方对信道状况的感知可能并不同步，既双方可能并不是同时发现链路质量变差。假设节点A是发送方，B是接收方，当A节点达到了自己的重传上限，发现信道链路质量变差。但作为接收方，节点B只是没有接受到对方的数据包，节点B无法区分A节点发送的包丢失和A节点已经发送完毕这两种状况。所以此时A节点重新开始跳频，而B节点则一直停留在当前信道。
为了提高重新预约的效率，当节点A决定重新预约的时候，应当马上告知节点B，让B节点也即刻回到跳频阶段，开始新的预约。（发送RJ帧，B节点进行应答，之后才回到跳频预约阶段）


3.5 控制帧的发送时机
在跳频预约阶段，由于无法知道想要进行通信的节点某一时刻所在信道，需要发送控制帧的节点，在跳频到每个时隙时发送控制帧。时隙的长短、发送帧所需要的时间和发送帧的时间点，这三个条件共同决定了MAC帧能否被正确的接收的概率，也就决定了预约成功的平均时间。
由上文对于具体协议过程的描述，两个通信节点要预约成功，必须在同一个时隙时间内切换到一个信道，并且在切换到其他信道之间完成RTS\CTS的交互。由于收发双方是异步跳频方式，所以根据上文描述的定理3，为了保证收发双方在信道重合 时间内能够预约成功，一个时隙的长度至少为发送4个RTS的时间。除了保证RTS/CTS的交互时间外，还需要考虑DIFS和SIFS的帧间间隔，以及硬件实现时切换信道所需时间。
理想条件下信道噪声为高斯白噪声，但实际信道噪声状况可能比较复杂。可能会出现突发性的在极短时间内，噪声偏大的现象，在比较恶劣的信道条件下，这样的信道也可以作为可用信道。所以如果某网络节点在某次信道感知时感知到某信道质量差，并不能就断定该信道不可用，应该进行随机后退后继续感知，如果在本时隙内多次感知的结果都是信道质量不好，才决定不在这个信道进行预约。

图 高斯白噪声+CTS随机后退

在异步跳频情况下发送时机的选择应该考虑两方面的情况：
1）随机后退
考虑了随机后退的情况后，在同步跳频情况下，在一个时隙的靠前的时间发送，会预留出接收方发送CTS时随机后退的时间，增加信道预约成功的可能性。但是在异步跳频的情况下，在时隙内靠前的时间发送帧，可能会因收发双方跳频时间的差距而导致目的节点接收不到发送方的控制帧。
2）异步跳频时间差
为了说明异步跳频带来的发送时间点的选择问题，我们简化发送过程分析，我们暂时不考虑实际硬件的信道切换时间，也不考虑发送帧之间等待的帧间间隔时间，单纯的从异步跳频的角度进行考虑。
 
图
假设每个跳频时隙的长短是发送一个RTS的时间，将图 的一部分进行放大。如图 所示，假设A、B两个节点的信道重叠时，时隙差距如图所示。图中的一个时隙的长度是4个RTS的长度 ，一个跳频时隙的长度为T，按照 将一个跳频时隙分为 四个时间段。只考虑MAC帧的发送时间且假设A向B节点发起通信过程，显然A节点的 时间段，不能作为发送时间。在 时间段内，B节点在信道出现重叠的时隙的上一个时隙，由 矩阵和列确定矩阵的定义方法可知，B节点的上一个时隙所在信道不可能跟本时隙相同。因而A节点发送RTS的时间如果属于B节点的上一个时隙，则B节点肯定无法收到。在 时间段，虽然B节点可以接收到RTS，但是回复的CTS的时间属于A节点的上一个时隙，此时A也不可能跟B在同一个信道，具体原因同上。
 
图
但是并不能因为第二点而只在 两个时隙进行控制帧的发送，如图所示的情况下，在可以把发送时间点提前到 时间段内，根据第一点的分析，在更靠前的时间发送控制帧可以提高预约成功的概率。
由上述两点的分析，发送方应该在可以发送的时间最早的时间开始发送控制帧。但是由于认知网络中的认知节点以完全异步的方式进行跳频，并不了解其他节点的情况。考虑到认知无线系统具有的智能性和对周围环境的不了解，可以使用Q学习的方式对发送时间进行调整。
3.6 Q学习调整发送时机
3.6.1 强化学习
根据强化学习的定义[Pierre Yves Glorennec. Reinforcement Learning: an Overview. ESIT2000, 2000.]，强化学习（RL，Reinforcement Learning）系统中包括两个重要的实体：外部环境、智能体。智能体通过对外部环境的观测判断自己所处的状态，并决定此时该执行的行动。
每个强化学习系统通过在外部动态环境中不断的“试错”（trial-and-error）过程，学习并构建了状态和行为的映射关系。其中的“试错”是指，在智能体在某种状态下执行了某种行为之后，会产生相应的奖赏（或强化，reinforcement）。其中的奖赏，是指该行为产生的后果对于智能体来说是否是所希望出现的结果，具体的衡量标准由学习过程具体的应用场景决定。如果这个行为产生了智能体不希望出现的消极效果，则这个行为对于智能体来说是“错误”的，所以称作“试错”。相应的，如果某种行为产生了积极的效果，智能体也会对该行为进行相应的标记，以增大产生积极效果的可能性。将强化学习方法应用于无线通信领域时，（？？？） 
强化学习系统的最终目的是构造一种“强化方法”，这种方法可以使智能体根据未来可能出现的奖赏和系统当前所处的状态，选择该使用哪种行为，来使得智能体的相关收益最大化。
 
图
如图所示，在马尔科夫策略过程中，智能体在某种状态下执行一种行为之后，会得到相应的奖赏。根据[Pierre Yves Glorennec. Reinforcement Learning: an Overview. ESIT2000, 2000]策略的定义为：在确定了某种状态的情况下，应该如何选择对应的行动。也就是说，策略定义了一种状态到行为之间的映射关系。在一个有限的系统中，确定了初始状态，在一系列的行动之后，会达到一种终止状态，在这个过程中每一次的行动都会产生对应的奖赏，强化学习中把在此过程中积累的折算奖赏叫做该初始状态对应的值。
在有限范围模型中，累积奖赏定义如下：
 
上式表示在K步动作内系统的累积奖赏和， 表示t时刻行动对应的奖赏值。t在离散马尔科夫系统中代表时间标号，既在 时刻系统会从 状态转移到 状态。相应的，在无限动作模型中，定义的方式类似。但是由于动作的无限如果只是定义为每一步动作的奖赏值的累加和，则会导致结果的不收敛，所以累积奖赏定义为折算之后的累积奖赏定义方式如下：
 
其中的 为折扣因子，满足 。随着k的增加， 随之变小，表示距离现在时间越久远的奖赏值对于策略的制定越不重要。 越接近0代表智能体越重视立即回报，相反， 越接近1代表该智能体越重视长期结果。
在非确定性马尔科夫过程中，在某种状态下执行某个特定动作后以一定的概率转移到另一个状态。在这种情况下根据转移概率使用数学期望值来表示累积折算奖赏显然更为合理。
 
也就是说，状态的值 代表以该状态作为初始状态，并从t时刻开始经过了多个行动（有限或无限）的累积奖赏值， 则代表这个奖赏值的数学期望。
根据前面论述的对于策略的定义，智能体在某种状态 时根据某种特定的策略 选择了某种行动 的过程可以表示为：
 
当智能体从某种初始状态s开始，遵从某种特定的状态 进行动作的选择，导致的累积奖赏 定义为：
 
其中，S代表该马尔科夫过程中所有状态的集合， 表示初始状态为s。 是在策略 下状态s的函数，所以也称为值函数，代表一种状态到状态的值的映射关系。一个最佳策略将提供一个初始状态和一系列行动的对应关系，使得智能体从任意状态开始并达到一个最终状态时，都可以达到累计奖赏值的最大值。
 
将上式做等价变形，可以得到迭代表示方式：
 
其中的 表示处于s状态时所有能采取的行动的集合， 表示从状态x到状态s的概率。为了简化表示，上式中我们令 。此时的最优策略表示为：
 

值迭代？？？
3.6.2 Q学习简介
Q学习算法是 算法的一种改进算法，而 是 算法（瞬时差分算法）的特殊情况。在一个确定性的马尔科夫策略过程中，在状态和行动都确定的情况下会转换到一个确定的状态。而在非确定性马尔科夫过程中，转移方程给出了状态/行动对应的转移概率。如果马尔科夫过程是非确定性的，则那么我们希望找出使得累积奖赏值的期望值最大的行为。（马尔科夫是一种怎样的存在？？）
Q学习过程试图找出状态/行动与Q值的对应关系，在强化学习中介绍的值函数在Q学习中用Q函数表示。在每种状态下都有一个Q值与该状态下的某种确定的行动呈对应关系，这个Q值定义为在某种初始状态下执行某种确定的策略导致的累积奖赏值的和。最优的Q值即为对应某种初始状态下执行最优策略时得到的Q值。Q学习的迭代方程如下

3.6.3  贪心算法下的Q学习
3.6.3.1 贪心算法

3.6.3.2 改进的Q学习

3.6.4 Q学习系统模型建立
我们将Q学习的算法和运行过程运用于认知节点在特定的网络状况下，在异步跳频汇聚阶段找到发送控制帧的最佳时机的过程。根据上文对Q学习的介绍，Q学习中的重要元素有三个：状态集、动作集、奖赏值函数定义。
根据上文中对于通信系统模型的论述，认知无线网络通信模型是马尔科夫决策过程的一个特殊情况。在该通信模型中没有状态的转移过程，也就是说只有一个状态。定义状态集合 。
在预约过程中，动作的选择即为发送时机的选择。由于Q学习中的动作是离散可分的，而本通信模型中的时间选择则是连续变化，为了在本通信模型中使用Q学习方法，我们可以将可以选择的发送时间分成离散的时间段。相对于跳频时隙来说，网络节点需要在每个跳频时隙中发送一个控制帧，则所处时隙的开始倒该时隙结束理论上都是可以进行帧发送的时间点。因而将一个时隙分成多个“子时隙”，将选择哪个子时隙作为网络节点可选的动作，动作集定义为一个时隙中所有的子时隙。
 
如图所示，表示在 时隙的跳频时隙对应的切换的具体信道，在t时隙认知节点处在信道2。该时隙被分成6个子时隙，认知节点选择其中的子时隙i对应着行为 。
在认知无线通信的应用场景中，选择合适的控制帧发送时机的目的是缩短信道预约的平均时间，所以每次执行动作之后的奖赏也应该用该动作导致的信道预约时间来表示。根据上文对于异步跳频预约特性的描述，每次预约的时间存在一定的随机性，不能作为动作好坏的评判标准。虽然信道预约时间的长短不能说明控制帧发送时机的好坏，但是可以确定的是，根据上文的分析，不好的发送时间会导致信道预约时间超出理论值。我们在这里以Quorum算法中的 方式为例，这种方法信道预约的最大理论值为 。假设执行动作 以后，按照 对应的子时隙进行控制帧的发送，本次信道预约成功经过的时隙数为m，则定义奖赏值方法如下：
 
上式表示，当本次信道预约时间超出理论时间时 ，代表这个行为产生的是消极结果，这个行为使得信道预约时间超出了理论时间。反之当预约时间在理论值之内时，不管具体预约时间的长短，都说明该发送时间是可行的，此时奖赏值为 。
假设第i次迭代中选择的子时隙为 ，相应的动作导致的奖赏值为 ，本次更新的Q值为 ，最初的Q值 是初始化所得的值，并不用动作决定，相应的初始化的第一次动作为 。
根据Q学习简化后的式子 和上述Q学习模型建立方法，认知节点作为Q学习中的智能体的学习算法可以简化的表述为：

初始化 
 
初始发送时机随机产生 
While需要信道预约：
    将 作为发送时间点
    发送控制帧，进行信道预约
    If 预约信道不成功：
        放弃本次信道预约，回到while判断是否需要信道预约
    Else：
按照式  计算本次预约换算的奖赏值 
    更新Q值 
    等概率的产生0~9的整数  
    If  ：
        执行探索，认知节点随机选择一个子时隙作为发送时刻 
    Else：
        认知节点选择使得Q值最大的子时隙 
    更新迭代计数 

上述Q学习算法过程在每一个发送节点运行。其中的前三步都是Q学习运行的初始化过程。在初始化中，一开始的控制帧发送时间随机产生，因为相应的Q也是随机产生，没有理由根据随机产生的Q值来选择合适的 。在通信节点选择了发送控制帧的子时隙后，需要以该子时隙作为发送时间进行信道预约。如果预约失败则无法计算本次的奖赏值 ，所以需要放弃本次的学习过程，返回循环的开始判断是否需要信道预约。如果预约成功了，则需要计算之前选择的 对应的奖赏值 ，并更新 。在为下次信道预约选择发送子时隙时我们使用基于 贪心算法的Q学习方式。为了加快学习进程，以一定的概率不选择可以使得Q值最大的动作，而是去探索其他动作。在本算法中，用等概生成随机数的方法描述概率。当生成的随机数小于 时，在动作集A中随机选择一个做为下次需要执行的动作。对应到本文的通信模型中，既在一个跳频时隙中的所有子时隙中随机选择一个子时隙作为发送时间。如果生成的随机数大于 ，则按照Q学习的思想选择使得Q最大的动作。
显然，使用Q学习的方法找到最佳发送时间的过程需要多次信道预约过程。当网络中的通信节点在一定时间内有多次短时间的通信过程的时候，这种方法更为有效。相反的，如果通信节点的通信次数较少，信道预约次数较少，而每次数据传输时间较长，则使用这种方法的优势可能并不明显。
3.7 使用两个时隙预约的设计方案
除了上述协议实现过程外，还可以使用两个时隙进行信道汇聚预约。上面描述的方法RTS/CTS交互在一个时隙内完成，在异步跳频的情况下需要的跳频时隙时间比较长。如果允许信道汇聚在两个时隙内完成，如图所示：
根据上文的分析，使用Quorum方法生成的跳频序列，可以使收发双方的节点在 时间内在N个信道上分别重合一次。如图，如果发送节点在第一个重合信道发送的RTS被接收节点收到，且接收节点在第二个重合信道发送CTS，如果这个CTS被接收到，则发送方会认为预约完成。此时发送方会驻留在收到CTS的信道，立即回复DATA，此时可以认为数据传输过程已经开始。
 
图
如图所示为使用两个时隙预约的接收节点运行状态机，跟图 对比后发现主要的区别在于，发送CTS时本设计方法还在跳频中。且收到第一个RTS之后，接收节点就在跳频过程中每个时隙都发送CTS，而不是在收到RTS之后发送CTS。发送节点状态机运行状况与使用一个时隙进行预约的情况相同。
 
图
（牵强？？）
这种设计的优势除了上面提到的跳频时隙的时间要求不是很长之外，也使得发送节点的RTS的“作用”更大。第一种方案中所有预约成功的情况，必须是在同一个时隙内信道上传输了RTS和CTS两个控制帧。尤其是当接受节点收到第一个RTS之后，如果立即回复的CTS没有被接收到，则下次必须也要等到发送方发送RTS之后再回复。如图所示，如果收发双方的信道重叠时间较短，显然如果接收节点能直接发送CTS，可以提高信道预约的成功概率。但是这种设计方式的发送方和接收方都存在“坚持发送”MAC帧的情况。对比图 和图可知，发送节点不知道接收节点是否收到RTS，所以一边跳频一边发送RTS；接收节点不知道发送节点是否接收到CTS，为了进行主动的寻找也需要一边跳频一边发送CTS。此时很可能导致信道上传输的帧过多，增加信道拥塞，反而会降低预约成功的可能性。
3.8 驻留后坚持发送CTS的设计方案
对比上面描述的两种方案，一种是接收方在收到RTS时驻留在当前信道，且只有在收到RTS之后立即回复CTS，除此之外不再发送多余的CTS；另一种方案是接收到RTS之后不改变跳频的状态，而是一边跳频一边一直发送CTS，而不是只有收到RTS之后才发送。
本设计方法将上面两种设计方法进行结合，接收方收到RTS之后依然驻留在当前信道，但是不再只是单纯的 等待RTS，而是在没收到RTS时就在当前信道按照发送方跳频的时间，每隔一个时隙发送一个CTS，如果收到RTS也立即回复CTS。
 
图
如图所示的接收状态机设计区别在于，收到RTS之后，接收方不再继续跳频，在收到RTS或者计时时间到的时候都需要在当前信道发送CTS。这样设计的优点在于改善了使用两个信道预约的方式中过多发送CTS可能导致的信道拥塞和对其他网络节点的影响。802.11中CTS帧的作用是防止隐藏站点问题，在本设计方法中，在收到RTS的信道上发送CTS也可以起到与标准协议中相同的作用。发送节点A在信道i发送的RTS被接收方B接收到，此时节点A竞争到了RTS的发送劝，因而A、B两个节点间的通信应该享有较高的优先级。于是B节点在相应的信道上发送CTS，具有对其他跳频到这个信道的节点进行通知的作用。这个CTS，可以告知其他节点，在该信道上即将有一对通信节点需要进行通信，其他希望进行数据传输的节点，不应该再选择这个信道进行预约。所以这个设计方案在网络节点较多的情况下可以提高信道预约的成功率。
（等待DATA的时间信道被其他节点抢占，跟是否能够在一个时隙内完成的概率有关，跟信道质量有关）
3.7 反馈式近似同步机制
（大概做不了）
第四章 基于USRP平台的实现
4.1实现平台简介

4.1.1 GNU Radio简介

4.1.2 USRP简介

4.2 Linux的TUN/TAP

4.3 实现结构介绍
由第三章的论述可知，该协议主要主要分为三个功能：发送帧、接收帧、按照要求切换信道。这三个功能之间既有一定的独立性，又需要相互调节和控制。发送控制帧之后需要等待接收，但接受帧并不一定要在控制帧的发送之后，所以发送跟接收逻辑需要相互独立。节点发送帧的过程，是从上层取到IP报文并在MAC层进行封装之后再进行发送。这个过程需要一直监听TUN/TAP端口，这种监听多以阻塞方式进行，所以实现无法计时的功能。接收过程同理需要一直监听网络端口，也无法计时。为了在信道预约阶段实现定时跳频的功能，跳频功能需要跟发送跟接收逻辑独立运行。但是发送、接收与跳频又存在明显的相互关系，例如接收到CTS之后，说明信道预约成功，此时应当通知跳频线程，不需要再进行跳频。
由图 和图 可知，发送和接收状态机中都有“一般跳频”状态，但是由于上面的分析，跳频只能由单独的线程来实现。图 中发送某种类型的MAC帧之后的状态转移条件往往是等待其回复帧，是否接收到回复帧是由接收线程负责检测，并对检测结果进行相应的标记和通知，发送线程只需要检测相应的标记或等待通知来实现线程间通信。为了实现多线程之间的控制和通信，我们使用多线程编程中的条件变量和线程锁等技术进行多线程通信。
值得注意的是，第三章中所述发送端和接收端逻辑仅仅只数据发送的逻辑上的发送方和接收方。但在实际实现时却不能完全按照数据发送的逻辑进行设计。以接收端为例，数据接收方在逻辑上只需要处理其接收数据时可能出现的所有的状况。但是实现接收功能时，设计的接收流程必须配合硬件接收机，接收机并不能区分数据帧和控制帧的区别。由于数据的发送端和接收端都有接收MAC帧的过程，接收机更无法知道网络节点当前是作为数据接收方发送方。本章将从硬件实现的角度分三个线程实现第三章所述的逻辑功能。下面将对这三个线程的具体实现和线程间通信方法分别进行介绍，图 中加粗代表线程间交互的过程，斜体表示跟发送线程或者接收线程的交互，下划线代表和跳频线程的交互。
4.3.1 发送功能实现
 图
发送线程流程如图所示，将图 与图 对比可以发现，图 中所有接收帧的条件在图 中都表现为对相应标记的检查。对于发送DATA等待ACK的过程，发送线程无法直接检测是否接收到ACK的过程。而是由接收线程检测到接收到了ACK，然后标记已经接收到ACK。接收线程查看该标记时如果发现已经接收到ACK，则说明上一个数据包已经被发送成功，下次发送时应该继续从上层发送队列中取新的数据包，该标记检测在图 中用加粗和斜体表示。相应的，如果检测相应标记时发现没有收到ACK，则说明DATA帧没有发送成功，于是再次传输时不需要重新从队列中取新的数据包。只需要重新发送上次发送取出的DATA,进行DATA的重新发送。在重发过程中还应该进行发送次数的计数，如果达到重传上限，则认为信道质量差，应该进行相应的重新预约的处理。
同理，CTS是否接收到应该有接收线程来检测，发送线程通过检测标记判断当前节点是否处于传输过程，继而判断应当发送DATA还是继续发送RTS。等待CTS的过程跟等待循环发送RTS的过程是统一的，在下次发送RTS之前如果标记表示没有收到CTS，则继续发送RTS，相反则发送DATA。
除了跟接收线程之间的交互之外，发送线程为了在跳频阶段控制MAC的时刻。这个过程上文已经解释过，需要借助跳频线程来进行控制。经过判断，如果节点目前处于跳频预约阶段，则进入等待或者睡眠状态，该睡眠的唤醒由跳频线程来负责。跳频线程变负责控制信道切换边进行计时，等达到需要的发送时间时，会给发送线程一个计时时间到的通知。此时发送线程再进行帧的发送。
4.3.1.1随机退避

4.3.1.2保护时间
由于我们上文介绍的USRP硬件的信道切换有一定的时间间隔，需要等待硬件完成切换之后再进行发送。除了刚刚切换信道时需要设置一定的保护时间之外，在切换下一个信道之前，也不能允许帧发送。

图
如图所示
4.3.2 接收功能实现
 
图
接收功能需要能够处理在信道上传输的所有帧类型。在判断帧类型之前还需要进行CRC校验，如果发现校验有误说明这个包已经被损坏数据有冲突，此时只能丢弃帧。之后校验正确时，才能进一步进行MAC帧头部解析。先进行地址过滤，判断该帧的目的地址是否是自己。如果接收方不是自己则丢弃，如果是自己再进行帧类型的判断。
为了实现第三章所述的发送/接收完成的判断，需要在接收到目的地址是自己的帧之后更新接收时间，以便在长时间没有接收到帧的情况下标记传输过程的结束。
MAC帧头部解析之后对于四种类型不同的帧类型处理方法如下：
1）RTS
收到RTS时应该通知跳频线程不需要再继续跳频，而应该驻留在当前信道，之后回复CTS，更新发送时间。
2）CTS
接收到CTS，说明该节点已经发送过RTS，由上一章描述的协议设计过程，此时应该通知跳频线程驻留当前信道，通知发送线程可以发送DATA帧。
3）DATA
收到DATA说明该节点此时正处于数据传输阶段。此时应该立即回复ACK，并更新发送时间。
4）ACK
收到ACK说明上一个发送的DATA已经被正确接收。此时应该标记数据包的发送完成，在发送线程检测相应标记时，可以判断需要从发送队列中取出一个新的数据包准备发送，而不是重复发送上一个DATA帧。
4.3.3 跳频功能实现
 
图
跳频过程要求能够进行比较精确的计时，来调整跳频的时隙长短。跳频的线程逻辑有三个主要功能：信道计算、信道切换和通知发送MAC帧。
信道计算既为每次跳频切换信道之前需要计算应当切换到哪个信道。计算的根据是当前节点对应的跳频序列和上次跳频的时隙号i。
表
时隙id	0	1	2	3	4	5	6	7	8
信道id	1	0	2	0	2	1	2	1	0
如图所示i表示时隙号， 既为 ，表示该节点对应的跳频序列在时隙i时对应的信道。
信道切换是在信道预约阶段进行的，而数据的发送阶段，不需要进行信道切换。此时，节点需要在当前所在的信道继续进行数据的发送过程。但是考虑到在数据发送阶段结束后，收发双方节点需要重新进行各自的跳频，所以可以选择在数据发送阶段也一直进行信道计算，但只在非数据发送阶段进行信道切换的方式。这样针对网络中的每个认知节点，不管是否发生或数据传输过程，跳频过程都可以像从未被“打断”过一样进行，这样的好处是可以使得全网节点间的时间差基本不变。在网络中相关节点的时间差不变的情况下，我们可以利用这一点进行该协议性能的优化，相关内容会在稍后的章节中介绍。
在跳频线程逻辑中需要对MAC帧的发送时刻进行控制，也就是需要这两个线程进行信息交互。如图所示，假设用 表示时隙长度，计算信道之后，等待 ，然后通知发送线程可以进行MAC帧的发送，然后在等待 。这个过程表示在预约信道时期，每个时隙只允许发送一个MAC帧，每次发送的时刻在时隙开始后 。这里的 只是作为一个例子，实际中可以根据需要调整为在任意合理的时刻发送该通知。在发送通知的时候，MAC帧发送线程如果有帧需要发送，必须处于等待通知的状态，如果该线程没有等待这个通知，则这个通知作废。在数据的传输阶段，数据帧的发送与跳频时隙无关，此时的发送线程并不等待通知，而是直接进行发送，因而该通知不会影响正常的数据帧发送。
（？？）
除了主要的三个功能外，这个跳频线程还需要在每次切换信道后记录信道切换的时间。由于在USRP的硬件系统中，切换信道需要一定的时间。所以帧的发送跟信道切换之间需要有相应的时间间隔，所以需要记录上次跳频的时间。


4.4 Q学习对发送时刻的优化
Q学习算法的运行需要在发送和接收逻辑中联合运行
 

4.5 波形的显示

4.6 认知跳频协议的运行方法
认知跳频协议最基本的网络场景包括两个网络节点。每个节点由一台安装Ubuntu 11.04的计算机和一台USRP的硬件设备组成。其中，计算机的linux对应系统下要安装USRP对应的GUN Radio软件平台。USRP硬件至少要搭载RFX2400子版，并通过USB连接到计算机。
在计算机终端下进入主程序所在文件夹之后，以如下命令运行本协议：
$sudo python ./tunnel_QCH2.18.py –f 2.8G –r 300k –c 50
其中的-f用于指定协议运行的信道，由于本协议是跳频协议，所以一开始指定的信道与协议的运行状况无关；-r指定协议运行的速率，上一条指令将速率设定为300k；-c代表信道检测阈值，这条指令表示当监听信道时发现信道上的信号大于等于50DB时，认为信道忙，需要随机后退。如果USRP和相应的软件平台都可以正常运行，则终端显示如下图所示。
 图
终端中显示的信息包括三个部分的信息。协议相关参数提示本次运行的速率、调制方式、频率和载波监听阈值。之后显示已经分配到的虚拟端口号，并要求使用者按照要求对IP地址进行配置。为了对节点跳频的过程进行观察和分析，我们打印跳频的信道和时间。如图所示，两次跳频之间的时间间隔基本为0.05s，既本次协议运行对应的跳频时隙为0.05s。

4.7 场景测试和结果分析

4.7.1 两节点间Ping
RTS广播（地址过滤），也可以略过不讲
4.7.1.1 通信过程分析
4.7.1.2 预约的信道
体现负载均衡，预约到每个信道的概率相等，结果应该是频率相近
4.7.1.3 时隙长短的影响
一个时隙的长短，对预约时间的影响，收发节点时隙长短是否可以不相同
4.7.1.4 跳频序列的对比
4.7.1.4 控制帧发送时机的影响
每个可以发送的时隙，在哪个时间点发送，产生的影响
4.7.1.5 反馈调整控制帧发送时机对预约的影响
4.7.1.6 反馈近似同步的影响
4.7.2 两节点间数据传输
打扰后重新预约
4.7.3 多节点通信



文献综述
[1]	Joseph Mitola III，GQ MAGUIREG Jr.CognitiVe radio：Making software radios more perSonal[J]．IEEE Personal Communications，1999，6(4)：ppl3-18
[2]	FCC-03-322 Facilitating opportunities for Flexible,Effieient,and Reliable Spectrum Use Employing Cognitive Radio Technologies [Online],Available
[3]	J. So and N. Vaidya. Multi-channel MAC for ad hoc networks: Handling multi-channel hidden terminals using a single transceiver. In ACM MobiHoc’04, May 2004.
[4]	Jha S C,phuyal U et al. Design of OMC-MAC An oppor-tunistic multi-channel MAC with Qos provisioning for distributed cognitive radio networds .IEEE transactions on wireless Communications 2011 10(10):3414-3425
